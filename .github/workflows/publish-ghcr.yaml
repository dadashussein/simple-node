name: Docker Image CI for GHHCR

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Generate version tag
        id: version
        run: |
          echo "SHA_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_SHA::7}-${TIMESTAMP}" >> $GITHUB_ENV
          
      - name: Build and push the image
        run: |
          docker login --username dadashussein --password ${{secrets.GH_PAT}} ghcr.io
          # Build with multiple tags - latest, commit SHA, and version
          docker build . --tag ghcr.io/dadashussein/nodejs:latest \
                        --tag ghcr.io/dadashussein/nodejs:${{ env.SHA_TAG }} \
                        --tag ghcr.io/dadashussein/nodejs:${{ env.VERSION }}
          # Push all tags
          docker push ghcr.io/dadashussein/nodejs:latest
          docker push ghcr.io/dadashussein/nodejs:${{ env.VERSION }}

  deploy:
    name: Deploy
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: ${{ secrets.SERVICE_ACCOUNT }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
      
      - name: Checkout source code
        uses: actions/checkout@v3
      
      - name: Install Helm
        run: |
          curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Generate version tag
        id: version
        run: |
          echo "SHA_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_SHA::7}-${TIMESTAMP}" >> $GITHUB_ENV

      - name: Deploy to Kubernetes with Helm
        run: |
          helm upgrade --install nodejs-app ./node-deployment \
            --namespace github \
            --create-namespace
