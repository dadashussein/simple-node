# Global Configuration
# -- Number of pod replicas to run
replicaCount: 2

# Image Configuration
image:
  # -- Container image repository
  repository: 051826725870.dkr.ecr.eu-west-1.amazonaws.com/nestjs
  # -- Image pull policy (Always, IfNotPresent, Never)
  pullPolicy: Always  
  # -- Image tag (consider using a specific version instead of latest)
  tag: latest

# -- Container port
containerPort: 3000

# -- Readiness probe configuration
readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# -- Liveness probe configuration
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Image Pull Secrets
imagePullSecrets:
  - name: ecr-secret

# Application Naming
nameOverride: ""
fullnameOverride: ""

# Service Account Configuration
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use
  name: ""

# Pod Configuration
podAnnotations: {}
podLabels: {}

# Security Context
podSecurityContext: {}
securityContext: {}

# Deployment Configuration
deployment:
  annotations: {}

# Strategy Configuration
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# Service Configuration
service:
  # -- Service type (ClusterIP, NodePort, LoadBalancer)
  type: ClusterIP
  # -- Service port
  port: 3000
  # -- Node port (only if service.type is NodePort)
  nodePort: 32001
  # -- Additional service annotations
  annotations: {}

# Ingress Configuration
ingress:
  # -- Enable ingress controller resource
  enabled: false
  # -- IngressClass that will be be used
  className: ""
  # -- Ingress annotations
  annotations: {}
  # -- Ingress hosts configuration
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- TLS configuration
  tls: []

# Resource Management
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi

# Node Scheduling
nodeSelector: {}
tolerations: []
affinity: {}

# Metrics Configuration
metrics:
  # -- Enable prometheus metrics
  enabled: false
  # -- Prometheus metrics port
  port: 9090
  # -- ServiceMonitor configuration for Prometheus Operator
  serviceMonitor:
    enabled: false
    interval: 15s

# Network Policy
networkPolicy:
  # -- Enable network policy
  enabled: false
  # -- Define allowed ingress traffic
  ingress: []
  # -- Define allowed egress traffic
  egress: []

# Horizontal Pod Autoscaling
autoscaling:
  # -- Enable autoscaling
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Environment Variables
env:
  # -- Environment variables as key-value pairs
  variables: {}
  # -- Environment variables from ConfigMaps
  configMaps: []
  # -- Environment variables from Secrets
  secrets: []

# Storage Configuration
persistence:
  # -- Enable persistent storage
  enabled: false
  # -- Storage class name
  storageClassName: ""
  # -- Persistent Volume size
  size: 1Gi
  # -- Access modes for the PVC
  accessModes:
    - ReadWriteOnce

volumes: []
volumeMounts: []
